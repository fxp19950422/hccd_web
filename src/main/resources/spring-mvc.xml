<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	default-autowire="byName"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/mvc 
	 http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
	 http://www.springframework.org/schema/aop 
	 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context.xsd
	 http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<mvc:annotation-driven/><!-- 一般情况不需要这个配置，但如果配置了mvc:default-servlet-handler，就一定要配置这项，否则controller会映射不成功 -->
	
	<!-- 可以使用@Service @Repository @Component注解的package -->
	<context:component-scan base-package="cn.sportsdata.webapp.youth.web" />
	<context:component-scan base-package="cn.sportsdata.webapp.youth.patient" />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean  class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" p:viewClass="org.springframework.web.servlet.view.JstlView"/>
		
	<!-- 5：文件上传-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size100MB -->
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>20480</value>
		</property>
	</bean>
	
	<mvc:interceptors>  
		<mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/static/**"/>
            <mvc:exclude-mapping path="/auth/login"/>
            <mvc:exclude-mapping path="/share/**"/>
            <mvc:exclude-mapping path="/match/showMatchSharing"/>
            <mvc:exclude-mapping path="/utraining/share_plan"/>
            <mvc:exclude-mapping path="/xuan/verifyCode"/>
            <mvc:exclude-mapping path="/file/downloadFile"/>
            <mvc:exclude-mapping path="/api/v1/**"/>
            <mvc:exclude-mapping path="/auth/forgetPW"/>
            <mvc:exclude-mapping path="/auth/resetPW"/>
            <mvc:exclude-mapping path="/hagkFile/asset_pub"/>
            <bean class="cn.sportsdata.webapp.youth.common.interceptors.LoginInterceptor" />  
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages/HagkResources" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
	
	<!-- 全局异常处理 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error/500</prop>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
		</property>
		 <property name="statusCodes">
             <props>
                 <prop key="error/500">500</prop>
             </props>
         </property>
         <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
         <property name="defaultErrorView" value="error/500"></property>
         <!-- 默认HTTP状态码 -->
         <property name="defaultStatusCode" value="500"></property>
	</bean>

	<mvc:resources mapping="/static/**" location="/resources/" cache-period="31556926"/>  
</beans>