<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sportsdata.webapp.youth.dao.hospital.PatientDAO">
	<resultMap id="OperationRecordsType" type="cn.sportsdata.webapp.youth.common.vo.patient.OpertaionRecord">
        	<!-- <result column="id" property="id" jdbcType="VARCHAR"/> -->
        	<id column="id" property="id" jdbcType="VARCHAR"/>
        	<result column="patient_id" property="patientId" jdbcType="VARCHAR"/>
        	<result column="visit_id" property="visitId" jdbcType="VARCHAR"/>
        	<result column="dept_stayed" property="departmentId" jdbcType="VARCHAR"/>
        	<result column="operation_no" property="operationNo" jdbcType="VARCHAR"/>
        	<result column="operation_desc" property="operationDesc" jdbcType="VARCHAR"/>
        	<result column="operation_code" property="operationCode" jdbcType="VARCHAR"/>
        	<result column="operator_name" property="operatorName" jdbcType="VARCHAR"/>
        	<result column="heal" property="heal" jdbcType="VARCHAR"/>
        	
        	<result column="wound_grade" property="woundGrade" jdbcType="VARCHAR"/>
        	<result column="OPERATING_DATE" property="operatingDate" jdbcType="VARCHAR"/>
        	<result column="scheduled_date_time" property="operateScheduleDate" jdbcType="VARCHAR"/>
        	<result column="anaesthesia_method" property="anaesthesiaMethod" jdbcType="VARCHAR"/>
        	<result column="operator" property="operator" jdbcType="VARCHAR"/>
        	<result column="doctor_id" property="doctorId" jdbcType="VARCHAR"/>
        	<result column="FIRST_ASSISTANT" property="firstAssistant" jdbcType="VARCHAR"/>
        	<result column="SECOND_ASSISTANT" property="secondAssistant" jdbcType="VARCHAR"/>
        	<result column="ANESTHESIA_DOCTOR" property="anesthesiaDoctor" jdbcType="VARCHAR"/>
        	<result column="OPERATION_SCALE" property="operationScale" jdbcType="VARCHAR"/>
        	<result column="OPTYPE_PRIMARY" property="optypePrimary" jdbcType="VARCHAR"/>
        	
        	<result column="OPERATION_NURSE" property="operationNurse" jdbcType="VARCHAR"/>
        	<result column="BEFORE_OPER" property="beforeOper" jdbcType="VARCHAR"/>
        	<result column="OPERATION_START_DATE" property="operationStartDate" jdbcType="VARCHAR"/>
        	<result column="OPERATION_STOP_DATE" property="operationStopDate" jdbcType="VARCHAR"/>
        	<result column="OPERATION_EMER_INDICATOR" property="operationEmerIndicator" jdbcType="VARCHAR"/>
        	<result column="OPERATING_END_DATE" property="operatingEndDate" jdbcType="VARCHAR"/>
        	<result column="IF_GCK" property="ifGck" jdbcType="VARCHAR"/>
        	<result column="HOSPITAL_ID" property="hospitalId" jdbcType="VARCHAR"/>
        	<result column="STATUS" property="status" jdbcType="VARCHAR"/>
        	<result column="OP_PRIMARY" property="opPrimary" jdbcType="VARCHAR"/>
        	<result column="before_diagnosis" property="beforeDiagnosis" jdbcType="VARCHAR"/>
        	<result column="after_diagnosis" property="afterDiagnosis" jdbcType="VARCHAR"/>
        	<result column="OPERATION_DESC" property="operationDesc" jdbcType="VARCHAR"/>
        	<result column="process" property="process" jdbcType="VARCHAR"/>
        	<result column="posture" property="posture" jdbcType="VARCHAR"/>
        	<result column="incision" property="incision" jdbcType="VARCHAR"/>
        	<result column="exploratory" property="exploratory" jdbcType="VARCHAR"/>
        	<result column="steps" property="steps" jdbcType="VARCHAR"/>
        	<result column="drainage" property="drainage" jdbcType="VARCHAR"/>
        	<result column="finished_condition" property="finishedCondition" jdbcType="VARCHAR"/>
        	
        	<result column='meeting_date' property="meetingDate" jdbcType="VARCHAR"/>
        	
        	<collection property="assetTypes" ofType="cn.sportsdata.webapp.youth.common.vo.AssetTypeVO">
        		<result column="assetTypeName" property="assetTypeName" jdbcType="VARCHAR"/>
        		<collection property="assets" ofType="cn.sportsdata.webapp.youth.common.vo.AssetVO">
        		 	<result column="asset_id" property="id" jdbcType="VARCHAR"/> 
        		</collection>
        	</collection>
        </resultMap>
	
	<!-- 查询挂号记录 -->
    <select id="getRegisteRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientRegistRecord" parameterType="java.util.Map">
    	select A.* from patient_regist A
	       	where A.doctor=#{doctor_code} and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' and year(VISIT_DATE) = #{year} 
	       	and month(VISIT_DATE) =#{month} and day(VISIT_DATE) = #{day}
	       	order by VISIT_DATE desc, VISIT_NO
    </select>
    
    <!-- 查询门诊记录 -->
    <select id="getMedicalRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.MedicalRecordVO" parameterType="java.util.Map">
    	select A.* from medical_record A
	       	where A.DOCTOR_NO=#{doctor_code} and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' and year(VISIT_DATE) = #{year} 
	       	and month(VISIT_DATE) =#{month} and day(VISIT_DATE) = #{day}
	       	order by VISIT_DATE desc, VISIT_NO
    </select>
    
      <!-- 查询门诊记录 -->
    <select id="getHospitalMedicalRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.MedicalRecordVO" parameterType="java.util.Map">
    	select A.*, B.real_name, B.identity_card from patient B, medical_record A 
   		<if test="depart_code != null and depart_code != '' ">
	   		inner join doctor C on (A.doctor_no = C.user_id)
	    	inner join (SELECT A.* FROM medical.department A left outer join department B on A.parent_department_id = B.department_code
				where A.department_code = #{depart_code}
				union 
			SELECT B.* FROM medical.department A left outer join department B on B.parent_department_id = A.department_code where A.department_code = #{depart_code}
				) D   on (C.department_id = D.department_code)
   		</if>
	       	where 
            A.patient_id = B.patient_number 
	       	and B.status='active'
            and A.status = 'active'
	       	<if test="doctor_code != null and doctor_code != '' ">
    			and A.DOCTOR_NO=#{doctor_code}
    		</if>
    		<if test="name != null and name != '' ">
    			and B.real_name like '${name}%'
    		</if>
    		<if test="idNumber != null and idNumber != '' ">
    			and B.identity_card like '${idNumber}%'
    		</if>
    		<if test="startDate != null and startDate != '' ">
    			<![CDATA[ and A.VISIT_DATE >= #{startDate} ]]>
    		</if>
    		<if test="endDate != null and endDate != '' ">
    			<![CDATA[ and A.VISIT_DATE <= #{endDate} ]]>
    		</if>
	       	order by VISIT_DATE desc, VISIT_NO
    </select>
    
    <!-- 查询手术记录 -->
    <select id="getOperationRecordList" resultMap="OperationRecordsType" parameterType="java.util.Map">
        select A.*, B.name as operator_name from operation A
        	left outer join doctor B on B.user_id = A.doctor_id
	       	where A.hospital_id=#{hospital_id} 
	      	and (A.doctor_id=#{doctor_code} or A.doctor_user=#{doctor_code} or A.dept_stayed in 
	       	  	<foreach collection="departmentIdList" item="id" index="index"
            		open="(" close=")" separator=",">
            		#{id}
            	</foreach>
            )
	       	and year(req_date_time) = #{year} and month(req_date_time) =#{month}
	       	and A.status = 'active' order by A.dept_stayed, A.doctor_id, req_date_time desc
    </select>
    
    <select id="getMyOperationRecordList" resultMap="OperationRecordsType" parameterType="java.util.Map">
        select A.* from operation A
	       	where (A.doctor_id=#{doctor_code} or A.doctor_user=#{doctor_code}) and A.hospital_id=#{hospital_id} 
	       	and year(OPERATING_DATE) = #{year} and month(OPERATING_DATE) =#{month}
	       	and A.status = 'active' order by OPERATING_DATE desc  limit 50
    </select>
    
    <select id="getFirstAsistOperationRecordList" resultMap="OperationRecordsType" parameterType="java.util.Map">
        select A.* from operation A
	       	where A.FIRST_ASSISTANT=#{doctor_name} and A.hospital_id=#{hospital_id} 
	       	and year(OPERATING_DATE) = #{year} and month(OPERATING_DATE) =#{month}
	       	and A.status = 'active' order by OPERATING_DATE desc limit 50
    </select>
    
    <select id="getSecondAsistOperationRecordList" resultMap="OperationRecordsType" parameterType="java.util.Map">
        select A.* from operation A
	       	where A.SECOND_ASSISTANT=#{doctor_name} and A.hospital_id=#{hospital_id} 
	       	and year(OPERATING_DATE) = #{year} and month(OPERATING_DATE) =#{month}
	       	and A.status = 'active' order by OPERATING_DATE desc limit 50
    </select>
    
    <select id="getAnesthesiaOperationRecordList" resultMap="OperationRecordsType" parameterType="java.util.Map">
        select A.* from operation A
	       	where A.ANESTHESIA_DOCTOR=#{doctor_name} and A.hospital_id=#{hospital_id} 
	       	and year(OPERATING_DATE) = #{year} and month(OPERATING_DATE) =#{month}
	       	and A.status = 'active' order by OPERATING_DATE desc limit 50
    </select>
    
    <!-- 查询住院记录 -->
    <!-- 住院期间的手术记录 -->
    <select id="getOperationsDuringInHospital" resultMap="OperationRecordsType" parameterType="java.util.Map">
        select A.*, C.meeting_date from operation A
        	left join morning_shift_meeting_record C on C.record_id = A.id
        	left join patient_in_hospital B on B.patient_id = A.patient_id
	       	where A.scheduled_date_time > B.ADMISSION_DATE_TIME and A.hospital_id=#{hospital_id} and B.id=#{record_id}
	        and A.patient_id =#{patient_id} and A.status = 'active' order by OPERATING_DATE desc
    </select>
    
    <!-- 住院期间的出院记录 -->
    <select id="getResidentDuringInHospital" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
        select A.*, C.meeting_date from resident_record A
        	left join morning_shift_meeting_record C on C.record_id = A.id
        	left join patient_in_hospital B on B.patient_id = A.patient_id
	       	where A.IN_OUT_STATUS = 0 and A.hospital_id=#{hospital_id} and B.id=#{record_id}
	        and A.patient_id =#{patient_id} and A.status = 'active'
    </select>
    
    <select id="getCurPatientsInHospital" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientInHospital" parameterType="java.util.Map">
        select A.*, C.meeting_date, A.dept_code as department_id from patient_in_hospital A
        	left join morning_shift_meeting_record C on C.record_id = A.id
	       	where (A.doctor_id=#{doctor_code} or A.dept_code in 
	       	  	<foreach collection="departmentIdList" item="id" index="index"
            		open="(" close=")" separator=",">
            		#{id}
            	</foreach>
            ) and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' order by A.dept_code, A.doctor_id, ADMISSION_DATE_TIME desc
    </select>
    
    <!-- 查询出院记录 -->
    <select id="getResidentRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
        select A.* from resident_record A
	       	where (A.doctor_id=#{doctor_code} or A.department_id in 
	       	  	<foreach collection="departmentIdList" item="id" index="index"
            		open="(" close=")" separator=",">
            		#{id}
            	</foreach>
            )
            and A.hospital_id=#{hospital_id} and year(DISCHARGE_DATE_TIME) = #{year} and month(DISCHARGE_DATE_TIME) =#{month}
	       	and A.status = 'active' and  A.IN_OUT_STATUS = 1 and A.DISCHARGE_DATE_TIME is not null 
	       	order by A.department_id, A.doctor_id, ADMISSION_DATE desc
    </select>
    
    <select id="getMyResidentRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
        select A.* from resident_record A
	       	where A.doctor_id=#{doctor_code} and A.hospital_id=#{hospital_id} 
	       	and year(DISCHARGE_DATE_TIME) = #{year} and month(DISCHARGE_DATE_TIME) =#{month}
	       	and A.status = 'active' and A.IN_OUT_STATUS = 1 and A.DISCHARGE_DATE_TIME is not null 
	       	order by DISCHARGE_DATE_TIME desc limit 50
    </select>
    
    <select id="getDirectResidentRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
        select A.* from resident_record A
	       	where A.DIRECTOR=#{doctor_name} and A.hospital_id=#{hospital_id} 
	       	and year(DISCHARGE_DATE_TIME) = #{year} and month(DISCHARGE_DATE_TIME) =#{month}
	       	and A.status = 'active' and A.IN_OUT_STATUS = 1 and A.DISCHARGE_DATE_TIME is not null 
	       	order by DISCHARGE_DATE_TIME desc limit 50
    </select>
    
    <select id="getAttendingResidentRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
        select A.* from resident_record A
	       	where A.ATTENDING_DOCTOR=#{doctor_name} and A.hospital_id=#{hospital_id} 
	       	and year(DISCHARGE_DATE_TIME) = #{year} and month(DISCHARGE_DATE_TIME) =#{month}
	       	and A.status = 'active' and A.IN_OUT_STATUS = 1 and A.DISCHARGE_DATE_TIME is not null 
	       	order by DISCHARGE_DATE_TIME desc limit 50
    </select>
    
    <!-- 查询单个病人所有记录 -->
   	<select id="getOperationById" resultMap="OperationRecordsType" parameterType="java.util.Map">
    	select A.*, E.asset_id, concat(G.name, F.name) as assetTypeName from operation A left outer join hospital_record_asset E on 
    	(A.id = E.hospital_record_id and E.record_type='operation' and E.status='active') 
    	left outer join record_asset_type F on (E.record_asset_type_id = F.id) 
    	left outer join record_stage_in_hospital G on (E.asset_stage_type_id = G.id)
    	where A.id = #{id}
    </select>
    
    <select id="getOperationByIdWithoutMapping" resultType="cn.sportsdata.webapp.youth.common.vo.patient.OpertaionRecord" parameterType="java.util.Map">
    	select A.* from operation A  where A.id = #{id}
    </select>
    
   	<select id="getResidentById" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
    	select A.*, B.real_name from resident_record A left outer join patient B on (A.patient_id = B.patient_number) where A.id = #{id}
	       	and B.status='active'
    </select>
    
    <select id="getMedicalRecordById" resultType="cn.sportsdata.webapp.youth.common.vo.patient.MedicalRecordVO" parameterType="java.util.Map">
    	select A.* from medical_record A where A.id = #{id}
    </select>
    
    <select id="getResidentRecordByOperation" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
    	select A.* from resident_record A 
	       	where A.patient_id=#{patient_id} and A.hospital_id=#{hospital_id} and A.status = 'active' 
	       	and #{operating_date} &gt; A.ADMISSION_DATE 
	       	and (#{operating_date} &lt; A.discharge_date_time or A.discharge_date_time is null)
	       	order by ADMISSION_DATE desc
    </select>
    
    <select id="getOperationsByResident" resultMap="OperationRecordsType" parameterType="java.util.Map">
    	select A.* from operation A 
	       	where A.patient_id=#{patient_id} and A.hospital_id=#{hospital_id} and A.status = 'active' 
	       	and scheduled_date_time &gt; #{admission_date} 
	       	and scheduled_date_time &lt; #{discharge_date}
	       	order by OPERATING_DATE desc
    </select>
    
    <select id="getPatientOperationRecords" resultMap="OperationRecordsType" parameterType="java.util.Map">
    	select A.* from operation A 
	       	where A.patient_id in (select patient_number FROM patient where real_name = #{patient_name} 
	       	and status='active')
	       	and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' and A.id != #{record_id} order by OPERATING_DATE desc
    </select>
    
    <select id="getPatientResidentRecords" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
        select A.* from resident_record A
	       	where A.patient_id in (SELECT patient_number FROM patient where real_name = #{patient_name}
	       	and status='active')
	       	and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' and A.id != #{record_id} order by ADMISSION_DATE desc
    </select>
    
    <select id="getPatientMedicalRecords" resultType="cn.sportsdata.webapp.youth.common.vo.patient.MedicalRecordVO" parameterType="java.util.Map">
    	select A.* from medical_record A
	       	where  A.patient_id in (SELECT patient_number FROM patient where real_name = #{patient_name} 
	       	and status='active')
        	and A.patient_id=#{patient_id}
	       	and A.status = 'active' and A.id != #{record_id} order by VISIT_DATE desc, VISIT_NO
    </select>
    
    <select id="getMedicalRecordByID" resultType="cn.sportsdata.webapp.youth.common.vo.patient.MedicalRecordVO" parameterType="java.util.Map">
    	SELECT * FROM medical.medical_record A, patient B, doctor C where A.patient_id = B.patient_number
	       	and B.status='active'
 		and A.doctor_no = C.user_id and A.id = #{record_id}
    </select>
    
    <!-- 医生查询自己的病人，按名字查询病人信息 -->
    <select id="searchPatientMedicalRecord" resultType="cn.sportsdata.webapp.youth.common.vo.patient.MedicalRecordVO" parameterType="java.util.Map">
    	select A.* from medical_record A left join patient B on B.patient_number = A.PATIENT_ID
	       	where A.DOCTOR_NO=#{doctor_code} and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' and B.real_name like CONCAT('%', #{patient_name},'%')
	       	and B.status='active'
	       	order by VISIT_DATE desc, VISIT_NO
    </select>
    
    <select id="searchPatientOperationRecord" resultMap="OperationRecordsType" parameterType="java.util.Map">
        select A.* from operation A left join patient B on B.patient_number = A.PATIENT_ID 
	       	where A.hospital_id=#{hospital_id} and B.real_name like CONCAT('%', #{patient_name},'%')
	       	and B.status='active'
	       	and A.status = 'active' order by OPERATING_DATE desc
    </select>
    
    <select id="searchPatientResidentRecord" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
        select A.* from resident_record A left join patient B on B.patient_number = A.patient_id 
	       	where A.hospital_id=#{hospital_id} and B.real_name like CONCAT('%', #{patient_name},'%')
	       	and B.status='active'
	       	and A.status = 'active' order by ADMISSION_DATE desc
    </select>

    <select id="searchPatientInhospital" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientInHospital" parameterType="java.util.Map">
        select A.* from patient_in_hospital A left join patient B on B.patient_number = A.PATIENT_ID 
	       	where A.hospital_id=#{hospital_id} and B.real_name like CONCAT('%', #{patient_name},'%')
	       	and B.status='active'
	        order by ADMISSION_DATE_TIME desc
    </select>

    <select id="getRecordAssetList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.RecordAssetVO" parameterType="java.util.Map">
		select A.id as id, A.record_asset_type_id as asset_type_id, A.asset_stage_type_id as asset_stage_id, B.id as asset_id, 
		concat(G.name, C.name) as asset_type_name, A.created_time from hospital_record_asset A 
		left outer join asset B on B.id = A.asset_id 
		left outer join record_asset_type C on C.id = A.record_asset_type_id
		left outer join record_stage_in_hospital G on (A.asset_stage_type_id = G.id)
		where A.hospital_record_id=#{record_id} and A.status = 'active' order by asset_stage_type_id, record_asset_type_id
    </select>
    
    <select id="getRecordAssetTypeList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.RecordAssetTypeVO" parameterType="java.util.Map">
		select A.id, A.name from record_asset_type A 
		where A.status = 'active' order by A.id asc
    </select>
    
    <select id="getAssetStageList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.RecordAssetStageVO" parameterType="java.util.Map">
		select A.id, A.name from record_stage_in_hospital A order by A.id asc
    </select>
    
    <insert id="insertRecordAsset" parameterType="java.util.Map">
		insert into hospital_record_asset (id, hospital_id, hospital_record_id, asset_id, medical_data_type_id) 
		values(uuid(),  #{hospital_id},  #{hospital_record_id},  #{asset_id},  #{medical_data_type_id})
    </insert>
    
     <insert id="updateMedicalRecordById" parameterType="java.util.Map">
		update medical_record set illness_desc=#{illness_desc}, med_history=#{med_history},body_exam=#{body_exam},diag_desc=#{diag_desc},treatment=#{treatment},
		suggestion=#{suggestion},acc_exam=#{accExam} where id=#{record_id}
    </insert>
    
    <select id="getDoctorInfoByUsername" resultType="cn.sportsdata.webapp.youth.common.vo.patient.DoctorVO" parameterType="java.util.Map">
		select A.* from doctor A 
		left join user B on B.id = A.login_user_id
		where B.user_name=#{username} and A.status = 'active' order by A.id asc
    </select>
    
 	<select id="getPatients" parameterType="java.util.List" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientInfoVO">
        select * from patient where patient_number in
        <foreach collection="patientIdList" item="id" index="index"
            open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    
    <update id="updateMedicalRecord" parameterType="cn.sportsdata.webapp.youth.common.vo.patient.MedicalRecordVO">
    	update medical_record set  
    	yb_icd_name = #{medicalRecordVO.ybIcdName},
    	acc_exam=#{medicalRecordVO.accExam},
		visit_no = #{medicalRecordVO.visitNo},
		visit_date = #{medicalRecordVO.visitDate},
		patient_id = #{medicalRecordVO.patientId},
		treatment = #{medicalRecordVO.treatment},
		tooth = #{medicalRecordVO.tooth},
		suggestion = #{medicalRecordVO.suggestion},
		status = #{medicalRecordVO.status},
<!-- 		physician_secondary_number = #{medicalRecordVO.physicianSecondaryNumber}, -->
<!-- 		physician_primary_number = #{medicalRecordVO.physicianPrimaryNumber}, -->
<!-- 		physician_name = #{medicalRecordVO.physicianName}, -->
<!-- 		physician_email = #{medicalRecordVO.physicianEmail}, -->
		ordinal = #{medicalRecordVO.ordinal},
		operation_record = #{medicalRecordVO.operationRecord},
		menses4 = #{medicalRecordVO.menses4},
		menses3 = #{medicalRecordVO.menses3},
		menses2 = #{medicalRecordVO.menses2},
		menses = #{medicalRecordVO.menses},
		memo = #{medicalRecordVO.memo},
		medical_record = #{medicalRecordVO.medicalRecord},
<!-- 		medical_condition = #{medicalRecordVO.medicalCondition}, -->
		med_history = #{medicalRecordVO.medHistory},
		maternity = #{medicalRecordVO.maternity},
		marrital = #{medicalRecordVO.marrital},
<!-- 		insurance_provider_number = #{medicalRecordVO.insuranceProviderNumber}, -->
<!-- 		insurance_provider_name = #{medicalRecordVO.insuranceProviderName}, -->
<!-- 		insurance_policy_number = #{medicalRecordVO.insurancePolicyNumber}, -->
<!-- 		insurance_policy_holder = #{medicalRecordVO.insurancePolicyHolder}, -->
		individual = #{medicalRecordVO.individual},
		illness_desc = #{medicalRecordVO.illnessDesc},
		illness_date = #{medicalRecordVO.illnessDate},
		hospital_id = #{medicalRecordVO.hospitalId},
		family_ill = #{medicalRecordVO.familyIll},
		doctor_no = #{medicalRecordVO.doctorNo},
		doctor = #{medicalRecordVO.doctor},
		diag_yb_db = #{medicalRecordVO.diagYbDb},
		diag_desc = #{medicalRecordVO.diagDesc},
		cfz_flag = #{medicalRecordVO.cfzFlag},
		cdiag = #{medicalRecordVO.cdiag},
		body_exam = #{medicalRecordVO.bodyExam},
		assistant_exam = #{medicalRecordVO.assistantExam},
		anamnesis = #{medicalRecordVO.anamnesis},
<!-- 		allergies = #{medicalRecordVO.allergies}, -->
		advice = #{medicalRecordVO.advice}
    	where id = #{medicalRecordVO.id}
    </update>
    <insert id="insertMedicalRecord" parameterType="cn.sportsdata.webapp.youth.common.vo.patient.MedicalRecordVO">
    	insert into medical_record (id,yb_icd_name,visit_no,visit_date,
    	patient_id,treatment,tooth,suggestion,status,ordinal,
    	operation_record,menses4,menses3,menses2,menses,memo,
    	medical_record,med_history,maternity,marrital,individual,
    	illness_desc,illness_date,hospital_id,family_ill,doctor_no,
    	doctor,diag_yb_db,diag_desc,cfz_flag,cdiag,body_exam,
    	assistant_exam,anamnesis,advice,platform,acc_exam)
    	values (#{medicalRecordVO.id},#{medicalRecordVO.ybIcdName},#{medicalRecordVO.visitNo},
    	#{medicalRecordVO.visitDate},#{medicalRecordVO.patientId},
    	#{medicalRecordVO.treatment},#{medicalRecordVO.tooth},
    	#{medicalRecordVO.suggestion},#{medicalRecordVO.status},
    	#{medicalRecordVO.ordinal},#{medicalRecordVO.operationRecord},
    	#{medicalRecordVO.menses4},#{medicalRecordVO.menses3},
    	#{medicalRecordVO.menses2},#{medicalRecordVO.menses},
    	#{medicalRecordVO.memo},#{medicalRecordVO.medicalRecord},
    	#{medicalRecordVO.medHistory},#{medicalRecordVO.maternity},
    	#{medicalRecordVO.marrital},#{medicalRecordVO.individual},
    	#{medicalRecordVO.illnessDesc},#{medicalRecordVO.illnessDate},
    	#{medicalRecordVO.hospitalId},#{medicalRecordVO.familyIll},
    	#{medicalRecordVO.doctorNo},#{medicalRecordVO.doctor},#{medicalRecordVO.diagYbDb},
    	#{medicalRecordVO.diagDesc},#{medicalRecordVO.cfzFlag},#{medicalRecordVO.cdiag},
    	#{medicalRecordVO.bodyExam},#{medicalRecordVO.assistantExam},
    	#{medicalRecordVO.anamnesis},#{medicalRecordVO.advice},'platform_cloud',#{medicalRecordVO.accExam})
    </insert>
    
     <update id="updateOperationRecord" parameterType="cn.sportsdata.webapp.youth.common.vo.patient.OpertaionRecord">
     	update operation set  
     	wound_grade = #{opertaionRecord.woundGrade},
		visit_id = #{opertaionRecord.visitId},
		status = #{opertaionRecord.status},
		second_assistant = #{opertaionRecord.secondAssistant},
		patient_id = #{opertaionRecord.patientId},
		optype_primary = #{opertaionRecord.optypePrimary},
		operator = #{opertaionRecord.operator},
		operation_stop_date = #{opertaionRecord.operationStopDate},
		operation_start_date = #{opertaionRecord.operationStartDate},
		operation_scale = #{opertaionRecord.operationScale},
		operation_nurse = #{opertaionRecord.operationNurse},
		operation_no = #{opertaionRecord.operationNo},
		operation_emer_indicator = #{opertaionRecord.operationEmerIndicator},
		operation_desc = #{opertaionRecord.operationDesc},
		operation_code = #{opertaionRecord.operationCode},
		operating_end_date = #{opertaionRecord.operatingEndDate},
		operating_date = #{opertaionRecord.operatingDate},
		op_primary = #{opertaionRecord.opPrimary},
		if_gck = #{opertaionRecord.ifGck},
		hospital_id = #{opertaionRecord.hospitalId},
		heal = #{opertaionRecord.heal},
		first_assistant = #{opertaionRecord.firstAssistant},
		doctor_id = #{opertaionRecord.doctorId},
		before_oper = #{opertaionRecord.beforeOper},
		anesthesia_doctor = #{opertaionRecord.anesthesiaDoctor},
		anaesthesia_method = #{opertaionRecord.anaesthesiaMethod},
		before_diagnosis = #{opertaionRecord.beforeDiagnosis},
		after_diagnosis = #{opertaionRecord.afterDiagnosis},
		operationDesc = #{opertaionRecord.operationDesc},
		process = #{opertaionRecord.process},
		posture = #{opertaionRecord.posture},
		incision = #{opertaionRecord.incision},
		exploratory = #{opertaionRecord.exploratory},
		steps = #{opertaionRecord.steps},
		drainage = #{opertaionRecord.drainage},
		finished_condition = #{opertaionRecord.finishedCondition}
     	where id = #{opertaionRecord.id}
     	
     </update>
     
     <update id="updateResidentRecord" parameterType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord">
     	update resident_record set  
		hospital_id = #{residentRecord.hospitalId},
		patient_id = #{residentRecord.patientId},
		doctor_id = #{residentRecord.doctorId},
		create_time = #{residentRecord.createTime},
		last_update = #{residentRecord.lastUpdate},
		status = #{residentRecord.status},
		start_time = #{residentRecord.startTime},
		end_time = #{residentRecord.endTime},
		department_id = #{residentRecord.departmentId},
		name = #{residentRecord.name},
		admission_number = #{residentRecord.admissionNumber},
		gender = #{residentRecord.gender},
		age = #{residentRecord.age},
		fee_type = #{residentRecord.feeType},
		patients_section_code = #{residentRecord.patientsSectionCode},
		discharge_date_time = #{residentRecord.dischargeDateTime},
		in_out_status = #{residentRecord.inOutStatus},
		hospital_beds = #{residentRecord.hospitalBeds},
		admission_date = #{residentRecord.admissionDate},
		section_date = #{residentRecord.sectionDate},
		diagnose = #{residentRecord.diagnose},
		nurse_level = #{residentRecord.nurseLevel},
		critical_level = #{residentRecord.criticalLevel},
		doctor_in_charge = #{residentRecord.doctorInCharge},
		resident_id = #{residentRecord.residentId},
		director = #{residentRecord.director},
		attending_doctor = #{residentRecord.attendingDoctor},
		update_date = #{residentRecord.updateDate},
		in_state = #{residentRecord.inState},
		in_chi_diagnosis = #{residentRecord.inChiDiagnosis},
		in_wes_diagnosis = #{residentRecord.inWesDiagnosis},
		process = #{residentRecord.process},
		out_chi_diagnosis = #{residentRecord.outChiDiagnosis},
		out_wes_diagnosis = #{residentRecord.outWesDiagnosis},
		out_state = #{residentRecord.outState},
		suggestion = #{residentRecord.suggestion}
     	where id = #{residentRecord.id}
     	
     </update>
     
      <update id="updatePatientInHospital" parameterType="cn.sportsdata.webapp.youth.common.vo.patient.PatientInHospital">
     	update patient_in_hospital set  
		DIAGNOSIS = #{record.diagnosis},
		supplementary_examination = #{record.supplementaryExamination},
		record_discussion = #{record.recordDiscussion},
		op_primary = #{record.opPrimary},
		body_exam = #{record.bodyExam},
		ill_history = #{record.illHistory}
     	where id = #{record.id}
     	
     </update>
    
    <select id="searchRegisteRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientRegistRecord" parameterType="java.util.Map">
    	select A.* from patient_regist A
	       	where A.doctor=#{doctor_code} and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' and year(VISIT_DATE) = #{year} 
	       	and month(VISIT_DATE) =#{month} and day(VISIT_DATE) = #{day}
	       	<if test="patName != null and patName != '' ">
    			and A.name like '%${patName}%'
    		</if>
	       	order by VISIT_DATE desc, VISIT_NO desc
    </select>
    
    <select id="searchOperationRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.OpertaionRecord" parameterType="java.util.Map">
    	select A.*,A.scheduled_date_time operatingDate,
    	A.operation_desc operationDescription,
    	b.real_name patientName from operation A left join patient b on A.patient_id=b.patient_number
	       	where A.doctor_id=#{doctor_code} and A.hospital_id=#{hospital_id} 
	       	and b.status='active'
	       	and A.status = 'active' 
	       	<if test="patName == null or patName ==''">
		       	and year(scheduled_date_time) = #{year} 
		       	and month(scheduled_date_time) =#{month} and day(scheduled_date_time) = #{day}
	       	</if>
	       	<if test="patName != null and patName != '' ">
    			and b.real_name like '%${patName}%'
    		</if>
	       	order by scheduled_date_time desc
    </select>
    
       <select id="searchDirectorOperationRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.OpertaionRecord" parameterType="java.util.Map">
    	select C.*,C.scheduled_date_time operatingDate,C.operation_desc operationDescription,
    	D.real_name patientName from 
    		(SELECT A.* FROM medical.department A left outer join department B on A.parent_department_id = B.department_code
				where A.department_code = #{departmentId}
				union 
			SELECT B.* FROM medical.department A left outer join department B on B.parent_department_id = A.department_code where A.department_code = #{departmentId}
				)
			 A inner join doctor B on (A.department_code = B.department_id) 
			  inner join  operation C  on (B.user_id = C.doctor_id)  left join patient D on C.patient_id=D.patient_number
	       	where  C.hospital_id=#{hospital_id} 
	       	and D.status='active'
	       	and C.status = 'active' 
	       	
	       	<if test="patName == null or patName ==''"> 
	       	 and year(scheduled_date_time) = #{year} 
	       	and month(scheduled_date_time) =#{month} and day(scheduled_date_time) = #{day}
	       	</if>
	       	<if test="patName != null and patName != '' ">
    			and D.real_name like '%${patName}%'
    		</if>
	       	order by scheduled_date_time desc
    </select>
    
    <select id="searchInHospitalRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientInHospital" parameterType="java.util.Map">
    	select A.*,b.real_name from patient_in_hospital A left join patient b on A.patient_id=b.patient_number
	       	where A.doctor_id=#{doctor_code} and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' 
	       	and b.status='active'
	       	<if test="patName != null and patName != '' ">
    			and b.real_name like '%${patName}%'
    		</if>
    		<if test="careStartTime != null  ">
    		<![CDATA[ and ADMISSION_DATE_TIME > #{careStartTime} ]]>
    		</if>
    		<if test="careEndTime != null ">
    		<![CDATA[ and ADMISSION_DATE_TIME < #{careEndTime} ]]>
    		</if>
	       	order by ADMISSION_DATE_TIME desc
    </select>
    
     <select id="searchDirectorInHospitalRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientInHospital" parameterType="java.util.Map">
    		select C.*,D.real_name from 
	    	(SELECT A.* FROM medical.department A left outer join department B on A.parent_department_id = B.department_code
				where A.department_code = #{departmentId}
				union 
			SELECT B.* FROM medical.department A left outer join department B on B.parent_department_id = A.department_code where A.department_code = #{departmentId}
				)
			 A inner join doctor B on (A.department_code = B.department_id) 
			  inner join patient_in_hospital C on (B.user_id = C.doctor_id) 
		 	inner join patient D on (C.patient_id = D.patient_number)
		 	where C.status = 'active'
	       	and D.status='active'
	       	<if test="patName != null and patName != '' ">
    			and D.real_name like '%${patName}%'
    		</if>
    		<if test="careStartTime != null ">
    		<![CDATA[ and C.ADMISSION_DATE_TIME > #{careStartTime} ]]>
    		</if>
    		<if test="careEndTime != null ">
    		<![CDATA[ and C.ADMISSION_DATE_TIME < #{careEndTime} ]]>
    		</if>
	       	order by ADMISSION_DATE_TIME desc
    </select>
    
     <select id="searchResidentRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
    	select A.*,b.real_name from resident_record A left join patient b on A.patient_id=b.patient_number
	       	where A.doctor_id=#{doctor_code} and A.hospital_id=#{hospital_id} 
	       	and A.status = 'active' and A.in_out_status = '1'
	       	and b.status='active'
	       	<if test="patName != null and patName != '' ">
    			and b.real_name like '%${patName}%'
    		</if>
    		<if test="careStartTime != null  ">
    		<![CDATA[ and ADMISSION_DATE > #{careStartTime} ]]>
    		</if>
    		<if test="careEndTime != null ">
    		<![CDATA[ and ADMISSION_DATE < #{careEndTime} ]]>
    		</if>
	       	order by ADMISSION_DATE desc
    </select>
    
    <select id="getPatientBriefRecordsByHospital" resultType="cn.sportsdata.webapp.youth.common.bo.hospital.PatientRecordBriefBO" parameterType="java.util.Map">
    	select d.id, d.doctor_id as doctorId, doc.name as doctorName, d.create_date as createDate, record_type as type, u.avatar from 
			(
			select id, DOCTOR_NO as doctor_id, last_updated as create_date, 'medical' as record_type from medical_record where HOSPITAL_ID=#{hospitalId} and PATIENT_ID in 
				(select patient_id from patient_user_mapping where user_id = #{userId} and hospital_id = #{hospitalId})
			union all
			select id, doctor_id, OPERATING_DATE as create_date, 'operation' as record_type from operation where HOSPITAL_ID=#{hospitalId} and PATIENT_ID in 
				(select patient_id from patient_user_mapping where user_id = #{userId} and hospital_id = #{hospitalId})
			union all
			select id, doctor_id, create_time as create_date, 'resident' as record_type from resident_record where HOSPITAL_ID=#{hospitalId} and PATIENT_ID in 
				(select patient_id from patient_user_mapping where user_id = #{userId} and hospital_id = #{hospitalId})
			) as d
			left join doctor doc on d.doctor_id = doc.user_id
			left join user u on u.id = #{userId}
    </select>
    
     <select id="searchDirectorResidentRecordList" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
    		select C.*,D.real_name from 
	    	(SELECT A.* FROM medical.department A left outer join department B on A.parent_department_id = B.department_code
				where A.department_code = #{departmentId}
				union 
			SELECT B.* FROM medical.department A left outer join department B on B.parent_department_id = A.department_code where A.department_code = #{departmentId}
				)
			 A inner join doctor B on (A.department_code = B.department_id) 
			  inner join resident_record C on (B.user_id = C.doctor_id) 
		 	inner join patient D on (C.patient_id = D.patient_number)
		 	<where>
		 		C.in_out_status = '1'
	       		and D.status='active'
		       	<if test="patName != null and patName != '' ">
	    			and D.real_name like '%${patName}%'
	    		</if>
	    		<if test="careStartTime != null ">
	    		<![CDATA[ and C.ADMISSION_DATE > #{careStartTime} ]]>
	    		</if>
	    		<if test="careEndTime != null ">
	    		<![CDATA[ and C.ADMISSION_DATE < #{careEndTime} ]]>
	    		</if>
    		</where>
	       	order by ADMISSION_DATE desc
    </select>
    
    <select id="searchPatientInHospitalById" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientInHospital" parameterType="java.util.Map">
    	select A.*, B.real_name from patient_in_hospital A inner join  patient B on (A.patient_id = B.patient_number)
	       	where A.id=#{recordId}
	       	and B.status='active'
    </select>
    
    <select id="getRegisteRecordById" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientRegistRecord" parameterType="java.util.Map">
    	select A.* from patient_regist A
	       	where A.id=#{id}
    </select>
    
    <select id="getTodayMeetingRecords" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ShiftMeetingVO" parameterType="java.util.Map">
    	select A.*  from morning_shift_meeting_record A
			where TO_DAYS( now() ) - TO_DAYS(meeting_date) &lt;= #{diffDays} 
    </select>

	<update id="saveShiftMeetingRecords" parameterType="java.util.Map">
		replace into morning_shift_meeting_record(record_id, record_type, meeting_date, doctor_id, hospital_id, status)
		values(#{record_id}, #{record_type}, CURDATE(), #{doctor_id}, #{hospital_id},'active')
	</update>
	
	<update id="updatePatientRecentMeetingRecord" parameterType="java.util.Map">
		update patient_in_hospital set latest_meeting_date=CURDATE(), 
		latest_meeting_type=#{record_type} where id=#{record_id}
	</update>
	
	<delete id="deleteShiftMeetingRecord" parameterType="java.util.Map">
		delete from morning_shift_meeting_record where record_id=#{record_id}
	</delete>
	
	<!-- 获取医生的交班信息 -->
	<select id="getOperationMeetingRecords" resultType="cn.sportsdata.webapp.youth.common.vo.patient.OpertaionRecord" parameterType="java.util.Map">
    	select A.*, B.meeting_date, C.real_name as patient_name, C.gender as patient_gender from operation A 
    	left join morning_shift_meeting_record B on B.record_id = A.id 
    	left join patient C on C.patient_number = A.patient_id
    	where B.record_type='operation' and A.status = 'active' and A.doctor_id = #{doctor_id} and 
    	year(meeting_date) =#{year} and month(meeting_date) =#{month} and day(meeting_date) = #{day}
    </select>
    
	<select id="getInHospitalMeetingRecords" resultType="cn.sportsdata.webapp.youth.common.vo.patient.PatientInHospital" parameterType="java.util.Map">
    	select A.*, B.meeting_date, C.real_name as patient_name, C.gender as patient_gender from patient_in_hospital A 
    	left join morning_shift_meeting_record B on B.record_id = A.id 
    	left join patient C on C.patient_number = A.patient_id
    	where B.record_type='operation' and A.status = 'active' and A.doctor_id = #{doctor_id} and 
    	year(meeting_date) =#{year} and month(meeting_date) =#{month} and day(meeting_date) = #{day}
    </select>     
    
	<select id="getResidentMeetingRecords" resultType="cn.sportsdata.webapp.youth.common.vo.patient.ResidentRecord" parameterType="java.util.Map">
    	select A.*, B.meeting_date, C.real_name as patient_name, C.gender as patient_gender from resident_record A 
    	left join morning_shift_meeting_record B on B.record_id = A.id 
    	left join patient C on C.patient_number = A.patient_id
    	where B.record_type='operation' and A.status = 'active' and A.doctor_id = #{doctor_id} and 
    	year(meeting_date) =#{year} and month(meeting_date) =#{month} and day(meeting_date) = #{day}
    </select>
    
    <select id="getAppVersion" resultType="java.lang.String" parameterType="java.lang.String">
    	select version_string from app_version where app_type = #{app_type}
    </select>
    
</mapper>
